name: Maven Build and Test

on:
  push:
    branches:
      - '*'
  pull_request:
    branches:
      - master

jobs:
  # build:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3.13.0
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #       cache: maven

  #   - name: Build with Maven
  #     run: mvn -B package --file pom.xml

  # test:
  #   needs: build
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3.13.0
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #       cache: maven

  #   - name: Run Tests with Maven
  #     run: mvn test --file pom.xml

  # build-and-push:
  #   needs: test
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4.1.1

  #   - name: Set up JDK 11
  #     uses: actions/setup-java@v3.13.0
  #     with:
  #       java-version: '11'
  #       distribution: 'adopt'
  #       cache: maven

  #   - name: Log in to Docker Hub
  #     uses: docker/login-action@v3.1.0
  #     with:
  #       username: ${{ secrets.DOCKERHUB_ID }}
  #       password: ${{ secrets.DOCKERHUB_PASSWORD }}

  #   - name: Set up Docker Repository Prefix
  #     run: echo "REPOSITORY_PREFIX=${{ secrets.DOCKERHUB_ID }}" >> $GITHUB_ENV

  #   - name: Build and Push Docker Images
  #     run: mvn spring-boot:build-image -Pk8s -DREPOSITORY_PREFIX=${{ secrets.DOCKERHUB_ID }} && ./scripts/pushImages.sh

  # deploy:
  #   # needs: build-and-push
  #   runs-on: self-hosted

  #   steps:
  #   - name: Checkout repository
  #     uses: actions/checkout@v4.1.1

  #   - name: Set up kubeconfig
  #     run: |
  #       mkdir -p $HOME/.kube
  #       echo "${{ secrets.KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

  #   - name: Clean older Kubernetes deployments in dev
  #     run: |
  #       kubectl delete all --all -n dev || true &&
  #       kubectl delete pvc --all -n dev || true &&
  #       helm uninstall customers-db-mysql vets-db-mysql visits-db-mysql -n dev || true

  #   - name: Create secret in dev
  #     run: |
  #       kubectl delete secret wavefront -n dev || true &&
  #       kubectl create secret generic wavefront -n dev --from-literal=wavefront-url=https://wavefront.surf --from-literal=wavefront-api-token=2e41f7cf-1111-2222-3333-7397a56113c

  #   - name: Apply Kubernetes init-services in dev
  #     run: kubectl apply -f k8s/init-services -n dev

  #   - name: Install database helm charts in dev
  #     run: |
  #       helm repo add bitnami https://charts.bitnami.com/bitnami &&
  #       helm repo update &&
  #       helm upgrade --install vets-db-mysql bitnami/mysql \
  #         --namespace dev \
  #         --version 9.1.4 \
  #         --set auth.database=service_instance_db &&
  #       helm upgrade --install visits-db-mysql bitnami/mysql \
  #         --namespace dev \
  #         --version 9.1.4 \
  #         --set auth.database=service_instance_db &&
  #       helm upgrade --install customers-db-mysql bitnami/mysql \
  #         --namespace dev \
  #         --version 9.1.4 \
  #         --set auth.database=service_instance_db

  #   - name: Apply Kubernetes deployments in dev
  #     run: |
  #       mkdir -p /tmp/k8s
  #       cp k8s/*.yaml /tmp/k8s
  #       cat /tmp/k8s/*.yaml | \
  #         sed "s#\${REPOSITORY_PREFIX}#${{ secrets.DOCKERHUB_ID }}#g" | \
  #         kubectl apply -f - -n dev

  AWS_deploy:
    # needs: build-and-push 14
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4.1.1

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_PASCAL_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_PASCAL_KEY }}
        aws-region: eu-west-3

    - name: Setup kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    - name: Set up kubeconfig
      run: |
        mkdir -p $HOME/.kube
        echo "${{ secrets.AWS_PASCAL_KUBE_CONFIG }}" | base64 -d > $HOME/.kube/config

    - name: Clean older Kubernetes deployments in dev
      run: |
        kubectl delete all --all || true &&
        kubectl delete pvc --all || true &&
        helm uninstall customers-db-mysql vets-db-mysql visits-db-mysql || true

    - name: Create secret in dev
      run: |
        kubectl delete secret wavefront || true &&
        kubectl create secret generic wavefront --from-literal=wavefront-url=https://wavefront.surf --from-literal=wavefront-api-token=2e41f7cf-1111-2222-3333-7397a56113c

    - name: Apply Kubernetes init-services
      run: kubectl apply -f k8s/init-services

    - name: Install database helm charts
      run: |
        helm repo add bitnami https://charts.bitnami.com/bitnami &&
        helm repo update &&
        helm upgrade --install vets-db-mysql bitnami/mysql \
          --version 9.1.4 \
          --set auth.database=service_instance_db &&
        helm upgrade --install visits-db-mysql bitnami/mysql \
          --version 9.1.4 \
          --set auth.database=service_instance_db &&
        helm upgrade --install customers-db-mysql bitnami/mysql \
          --version 9.1.4 \
          --set auth.database=service_instance_db

    - name: Apply Kubernetes deployments
      run: |
        mkdir -p /tmp/k8s
        cp k8s/*.yaml /tmp/k8s
        cat /tmp/k8s/*.yaml | \
          sed "s#\${REPOSITORY_PREFIX}#${{ secrets.DOCKERHUB_ID }}#g" | \
          kubectl apply -f -

